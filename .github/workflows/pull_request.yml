name: Pull Request

on:
  pull_request:
    branches:
      # on pull requests to develop and release branches
      - 'develop'
      - 'release/**'
    paths-ignore:
      - '**.md'
      - 'changelogs/**'
      - 'docs/**'
      - 'design/**'
      - 'LICENSE'
      - 'MAINTAINERS'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Shellcheck
        uses: reviewdog/action-shellcheck@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review
          path: "."
          pattern: "*.sh"

      - uses: cachix/install-nix-action@v22
      - uses: rrbutani/use-nix-shell-action@v1.1.0
        with:
          file: shell.nix

      - name: Set up Go 1.19
        uses: actions/setup-go@v5
        with:
          go-version: 1.19.13
          cache: false

      - name: Check if the chart follows a valid semver version
        run: |
          branch_name="${{ github.event.pull_request.base.ref }}"
          ./scripts/validate-chart-version.sh --branch $branch_name

      - name: Run chart-testing lint
        run: |
          ct lint --config ct.yaml

  unit-test:
    needs: ['lint']
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.19
        uses: actions/setup-go@v5
        with:
          go-version: 1.19.13

      - name: Checkout
        uses: actions/checkout@v4

      - name: Unit test
        run: make test

      - name: Verify corrections
        run: make verify-src

      - name: Upload Coverage Report
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.txt
          name: coverage-$(date +%s)
          flags: unittests

  integration-test:
    runs-on: ubuntu-latest
    needs: ['lint', 'unit-test']
    strategy:
      matrix:
        kubernetes: [v1.27.2]
    steps:
      - name: Set up Go 1.19
        uses: actions/setup-go@v5
        with:
          go-version: 1.19.13

      - name: Checkout
        uses: actions/checkout@v4

      - name: Build images locally
        run: make provisioner-localpv-image || exit 1;

      - name: Setup Minikube-Kubernetes
        uses: medyagh/setup-minikube@latest
        with:
          cache: false
          minikube-version: 1.31.1
          driver: none
          kubernetes-version: ${{ matrix.kubernetes }}
          cni: calico
          start-args: '--install-addons=false'

      - name: Set up infra for integration test
        run: |
          sudo apt-get update && sudo apt-get install -y xfsprogs quota linux-modules-extra-`uname -r`
          go install -mod=mod github.com/onsi/ginkgo/v2/ginkgo@v2.14.0
          helm install localpv-provisioner ./deploy/helm/charts -n openebs --create-namespace --set localpv.image.pullPolicy=Never --set analytics.enabled=false
          kubectl get pods -A

      - name: Integration test
        run: |
          make integration-test

      - name: Upload Integration Test Coverage Report
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./tests/integration_coverage.txt
          name: coverage-integration-test-$(date +%s)
          flags: integrationtests

  provisioner-localpv:
    runs-on: ubuntu-latest
    needs: ['integration-test']
    steps:
      - name: Set up Go 1.19
        uses: actions/setup-go@v5
        with:
          go-version: 1.19.13

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: v0.5.1

      - name: Checkout
        uses: actions/checkout@v4

      - name: Build multi-arch Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./buildscripts/provisioner-localpv/provisioner-localpv.Dockerfile
          push: false
          load: false
          platforms: linux/amd64, linux/arm64, linux/arm/v7, linux/ppc64le
